'++LotusScript Development Environment:2:5:(Options):0:74
'********************************************
'Library AdminTools
'Olimpus: Oct 1, 2020
'********************************************
Option Public
Option Declare

Use "Collections"

'++LotusScript Development Environment:2:5:(Forward):0:1
Declare Class ATUser As Interface
Declare Class ATGroup As Interface
Declare Sub Initialize
Declare Function AT_getUser(user As Variant) As ATUser
Declare Function AT_getUserView() As NotesView
Declare Function AT_getATObject(obj As Variant) As Interface
Declare Function AT_waitProcess(Server As String, uid As String) As Boolean
Declare Function AT_getFullView() As NotesView
Declare Function AT_getNabOnServer(server As String) As NotesDatabase
Declare Function AT_isGroup(gName As String) As Boolean
Declare Function AT_isUser(uName As String) As Boolean
Declare Function AT_getNab() As NotesDatabase
Declare Function AT_getGroupView() As NotesView

'++LotusScript Development Environment:2:5:(Declarations):0:10
Private nLine As String
Private Const designElem = {AdminTools}

Private AT_nab As NotesDatabase
Private AT_userView As NotesView
Private AT_groupView As NotesView
Private AT_FullView As NotesView

Private Const TIME_TO_WAIT_PROCESS = 50

'********************************************
'Class NotesUser
'Olimpus: Oct 1, 2020
'********************************************
Class ATUser As Interface
	Private userName_ex As String
	Private mailServer_ex As String
	Private mailFilePath_ex As String
	Private mailDirectory_ex As String
	Private userDoc_ex As NotesDocument
	Private forwardingAddress_ex As String
	Private internetAddress_ex As String
	Private company_ex As String
	Private isChanged As Boolean
	
	Sub New (user As NotesDocument)
		On Error GoTo ErrH
		
		Set userDoc_ex = user	

		userName_ex = userDoc_ex.Getitemvalue("FullName")(0)
		mailServer_ex = userDoc_ex.Getitemvalue("MailServer")(0)
		mailFilePath_ex = userDoc_ex.Getitemvalue("mailFile")(0)
		mailDirectory_ex = StrLeftBack(userDoc_ex.Getitemvalue("mailFile")(0), "\")
		forwardingAddress_ex = userDoc_ex.Getitemvalue("MailAddress")(0)
		internetAddress_ex = userDoc_ex.Getitemvalue("InternetAddress")(0)
		
		GoTo EndH
ErrH:
		Error Err, DesignElem & " -> " & TypeName(Me) & " -> " & GetThreadInfo(1) & ", c. " & CStr(Erl) & nLine & Error$
EndH:
	End Sub
	'********************************************
	'Function getKey
	'String
	'Olimpus: Oct 1, 2020
	'********************************************
	Function getKey() As String
		On Error GoTo ErrH

		getKey = userName_ex	
		
		GoTo EndH
ErrH:
		Error Err, DesignElem & " -> " & TypeName(Me) & " -> " & GetThreadInfo(1) & ", c. " & CStr(Erl) & nLine & Error$
EndH:
	End Function
	'********************************************
	'Function mailServer
	'String
	'Olimpus: Oct 1, 2020
	'********************************************
	Public Property Get mailServer() As String
		On Error GoTo ErrH

		mailServer = mailServer_ex	
		
		GoTo EndH
ErrH:
		Error Err, DesignElem & " -> " & TypeName(Me) & " -> " & GetThreadInfo(1) & ", c. " & CStr(Erl) & nLine & Error$
EndH:
	End Property
	'********************************************
	'Property Set mailServer
	'Olimpus: Oct 1, 2020
	'********************************************
	Public Property Set mailServer() As String
		On Error GoTo ErrH

		mailServer_ex = mailServer
		Call userDoc_ex.Replaceitemvalue("MailServer", mailServer)	
		isChanged = True
		
		GoTo EndH
ErrH:
		Error Err, DesignElem & " -> " & TypeName(Me) & " -> " & GetThreadInfo(1) & ", c. " & CStr(Erl) & nLine & Error$
EndH:
	End Property
	'********************************************
	'Function mailFilePath
	'String
	'Olimpus: Oct 1, 2020
	'********************************************
	Public Property Get mailFilePath() As String
		On Error GoTo ErrH

		mailFilePath = mailFilePath_ex	
		
		GoTo EndH
ErrH:
		Error Err, DesignElem & " -> " & TypeName(Me) & " -> " & GetThreadInfo(1) & ", c. " & CStr(Erl) & nLine & Error$
EndH:
	End Property
	'********************************************
	'Property Set mailFilePath
	'Olimpus: Oct 1, 2020
	'********************************************
	Public Property Set mailFilePath() As String
		On Error GoTo ErrH

		mailFilePath_ex = mailFilePath	
		Call userDoc_ex.Replaceitemvalue("mailFile", mailFilePath)
		isChanged = True
		
		GoTo EndH
ErrH:
		Error Err, DesignElem & " -> " & TypeName(Me) & " -> " & GetThreadInfo(1) & ", c. " & CStr(Erl) & nLine & Error$
EndH:
	End Property
	'********************************************
	'Function userName
	'String
	'Olimpus: Oct 1, 2020
	'********************************************
	Public Property Get userName() As String
		On Error GoTo ErrH

		userName = userName_ex
		
		GoTo EndH
ErrH:
		Error Err, DesignElem & " -> " & TypeName(Me) & " -> " & GetThreadInfo(1) & ", c. " & CStr(Erl) & nLine & Error$
EndH:
	End Property
	'********************************************
	'Function mailDirectory
	'String
	'Olimpus: Oct 1, 2020
	'********************************************
	Public Property Get mailDirectory() As String
		On Error GoTo ErrH

		mailDirectory = mailDirectory_ex
		
		GoTo EndH
ErrH:
		Error Err, DesignElem & " -> " & TypeName(Me) & " -> " & GetThreadInfo(1) & ", c. " & CStr(Erl) & nLine & Error$
EndH:
	End Property
	'********************************************
	'Function save
	'Boolean
	'Olimpus: Oct 1, 2020
	'********************************************
	Function save() As Boolean
		On Error GoTo ErrH
		
		If isChanged Then save = userDoc_ex.Save(True, False)
		isChanged = False
		
		GoTo EndH
ErrH:
		Error Err, DesignElem & " -> " & TypeName(Me) & " -> " & GetThreadInfo(1) & ", c. " & CStr(Erl) & nLine & Error$
EndH:
	End Function
	'********************************************
	'Function getDoc
	'NotesDocument
	'Olimpus: Oct 1, 2020
	'********************************************
	Function getDoc() As NotesDocument
		On Error GoTo ErrH

		Set getDoc = userDoc_ex
		
		GoTo EndH
ErrH:
		Error Err, DesignElem & " -> " & TypeName(Me) & " -> " & GetThreadInfo(1) & ", c. " & CStr(Erl) & nLine & Error$
EndH:
	End Function
	'********************************************
	'Property Set forwardingAddress
	'Olimpus: Oct 6, 2020
	'********************************************
	Public Property Set forwardingAddress() As String
		On Error GoTo ErrH

		forwardingAddress_ex = forwardingAddress
		Call userDoc_ex.Replaceitemvalue("MailAddress", forwardingAddress)
		isChanged = True
		
		GoTo EndH
ErrH:
		Error Err, DesignElem & " -> " & TypeName(Me) & " -> " & GetThreadInfo(1) & ", c. " & CStr(Erl) & nLine & Error$
EndH:
	End Property
	'********************************************
	'Property Get forwardingAddress
	'String
	'Olimpus: Oct 6, 2020
	'********************************************
	Public Property Get forwardingAddress() As String
		On Error GoTo ErrH

		forwardingAddress = forwardingAddress_ex
		
		GoTo EndH
ErrH:
		Error Err, DesignElem & " -> " & TypeName(Me) & " -> " & GetThreadInfo(1) & ", c. " & CStr(Erl) & nLine & Error$
EndH:
	End Property
	'********************************************
	'Property Get internetAddress
	'String
	'Olimpus: Oct 6, 2020
	'********************************************
	Public Property Get internetAddress() As String
		On Error GoTo ErrH

		internetAddress = internetAddress_ex
		
		GoTo EndH
ErrH:
		Error Err, DesignElem & " -> " & TypeName(Me) & " -> " & GetThreadInfo(1) & ", c. " & CStr(Erl) & nLine & Error$
EndH:
	End Property
	'********************************************
	'Property Set internetAddress
	'Olimpus: Oct 6, 2020
	'********************************************
	Public Property Set internetAddress() As String
		On Error GoTo ErrH

		internetAddress_ex = internetAddress
		Call userDoc_ex.Replaceitemvalue("InternetAddress", internetAddress)
		isChanged = true
		GoTo EndH
ErrH:
		Error Err, DesignElem & " -> " & TypeName(Me) & " -> " & GetThreadInfo(1) & ", c. " & CStr(Erl) & nLine & Error$
EndH:
	End Property
	'********************************************
	'Property Get company
	'String
	'Olimpus: 29.10.2020
	'********************************************
	Public Property Get company() As String
	On Error GoTo ErrH

	If company_ex = "" Then company_ex = userDoc_ex.Getitemvalue("CompanyName")(0)
	company = company_ex
	
	GoTo EndH
ErrH:
	stop
	Error Err, DesignElem & " -> " & TypeName(Me) & " -> " & GetThreadInfo(1) & ", c. " & CStr(Erl) & nLine & Error$
EndH:
	End Property
	'********************************************
	'Property Set company
	'Olimpus: 29.10.2020
	'********************************************
	Public Property Set company() As String
	On Error GoTo ErrH
		
		If company_ex <> company Then
			company_ex = company
			Call userDoc_ex.Replaceitemvalue("CompanyName", company)
			isChanged = True	
		End If
	
	GoTo EndH
ErrH:
	stop
	Error Err, DesignElem & " -> " & TypeName(Me) & " -> " & GetThreadInfo(1) & ", c. " & CStr(Erl) & nLine & Error$
EndH:
	End Property
End Class

'********************************************
'Class ATGroup
'Olimpus: 09.11.2020
'********************************************
Class ATGroup As Interface
	Private name_ex As String
	Private type_ex As Integer
	Private members_ex As ObjectCollection
	Private internetAddress_ex As String
	Private doc_ex As NotesDocument
	Private isChanged As Boolean
	
	Sub New (doc As notesdocument)
		On Error GoTo ErrH

		Set doc_ex = doc
		internetAddress_ex = doc.Getitemvalue("InternetAddress")(0)
		name_ex = doc.Getitemvalue("ListName")(0)
		type_ex = CInt(doc.Getitemvalue("GroupType")(0))
	
		GoTo EndH
ErrH:
		stop
		Error Err, DesignElem & " -> " & TypeName(Me) & " -> " & GetThreadInfo(1) & ", c. " & CStr(Erl) & nLine & Error$
EndH:
	End Sub
	'********************************************
	'Function getKey
	'String
	'Olimpus: 09.11.2020
	'********************************************
	Function getKey() As String
	On Error GoTo ErrH

	getKey = doc_ex.Universalid
	
	GoTo EndH
ErrH:
	stop
	Error Err, DesignElem & " -> " & TypeName(Me) & " -> " & GetThreadInfo(1) & ", c. " & CStr(Erl) & nLine & Error$
EndH:
	End Function
	'********************************************
	'Property Get internetAddress
	'String
	'Olimpus: 09.11.2020
	'********************************************
	Public Property Get internetAddress() As String
	On Error GoTo ErrH

		internetAddress = internetAddress_ex
	
	GoTo EndH
ErrH:
	stop
	Error Err, DesignElem & " -> " & TypeName(Me) & " -> " & GetThreadInfo(1) & ", c. " & CStr(Erl) & nLine & Error$
EndH:
	End Property
	'********************************************
	'Property Set internetaddress
	'Olimpus: 09.11.2020
	'********************************************
	Public Property Set internetaddress() As String
	On Error GoTo ErrH

		Call doc_ex.Replaceitemvalue("InternetAddress", internetaddress)
		internetaddress_ex = internetaddress
		isChanged = true
	
	GoTo EndH
ErrH:
	stop
	Error Err, DesignElem & " -> " & TypeName(Me) & " -> " & GetThreadInfo(1) & ", c. " & CStr(Erl) & nLine & Error$
EndH:
	End Property
	'********************************************
	'Function save
	'Boolean
	'Olimpus: 09.11.2020
	'********************************************
	Function save() As Boolean
	On Error GoTo ErrH

		If isChanged Then save = doc_ex.Save(True, False)
		isChanged = False
	
	GoTo EndH
ErrH:
	stop
	Error Err, DesignElem & " -> " & TypeName(Me) & " -> " & GetThreadInfo(1) & ", c. " & CStr(Erl) & nLine & Error$
EndH:
	End Function
	'********************************************
	'Function getMembers
	'Objectcollection
	'Olimpus: 09.11.2020
	'********************************************
	Function getMembers() As ObjectCollection
	On Error GoTo ErrH

	If members_ex Is Nothing Then
		Dim user As Interface
		Set members_ex = New ObjectCollection
		ForAll member In doc_ex.Getitemvalue("Members")
			Set user = AT_getATObject(CStr(member))
			Call members_ex.addObject(user)
		End ForAll
	End If 
	Set getMembers = members_ex	
	
	GoTo EndH
ErrH:
	stop
	Error Err, DesignElem & " -> " & TypeName(Me) & " -> " & GetThreadInfo(1) & ", c. " & CStr(Erl) & nLine & Error$
EndH:
	End Function
End Class
'++LotusScript Development Environment:2:2:Initialize:2:10

Sub Initialize
	On Error GoTo ErrH
	nLine = Chr(10) & Chr(13)


	GoTo EndH
ErrH:
	Error Err, DesignElem & " -> " & GetThreadInfo(1) & ", c. " & CStr(ErL) & nLine & Error$ & nLine & Err
	Resume endH
EndH:
End Sub



'++LotusScript Development Environment:2:1:AT_getUser:6:8
'********************************************
'Function AT_getUser
'ATUser
'Olimpus: 27.10.2020
'********************************************
Function AT_getUser(user As Variant) As ATUser
	On Error GoTo ErrH
	
	Dim userDoc As notesdocument
	
	If TypeName(user) = "NOTESDOCUMENT" Then
		Set userDoc = user
	ElseIf TypeName(user) = "STRING" Then
		Set userDoc = AT_getFullView.Getdocumentbykey(user)
	ElseIf TypeName(user) = "ATUser" Then
		Set userDoc = user.getDoc()
	End If
	
	If Not userDoc Is Nothing Then Set AT_getUser = New ATUser(userDoc)
	
	GoTo EndH
ErrH:
	stop
	Error Err, DesignElem & " -> " & GetThreadInfo(1) & ", c. " & CStr(Erl) & nLine & Error$
EndH:
End Function


'++LotusScript Development Environment:2:1:AT_getUserView:6:8
'********************************************
'Function AT_getUserView
'NotesView
'Olimpus: 09.11.2020
'********************************************
Function AT_getUserView() As NotesView
	On Error GoTo ErrH

	
	If AT_userView Is Nothing Then Set AT_userView = AT_getNab().Getview("($VIMPeople)")
	Set AT_getUserView = AT_userView
	
	GoTo EndH
ErrH:
	stop
	Error Err, DesignElem & " -> " & GetThreadInfo(1) & ", c. " & CStr(Erl) & nLine & Error$
EndH:
End Function


'++LotusScript Development Environment:2:1:AT_getATObject:6:8
'********************************************
'Function AT_getATObject
'Interface
'Olimpus: 09.11.2020
'********************************************
Function AT_getATObject(obj As Variant) As Interface
	On Error GoTo ErrH

	Dim doc As NotesDocument
	Dim flag As Integer
	
	If TypeName(obj) = "NOTESDOCUMENT" Then
		Set doc = obj
		Select Case  doc.Getitemvalue("Type")(0)
			Case "Person"
				flag = 1
			Case "Group"
				flag = 2
		End Select
	ElseIf TypeName(obj) = "STRING" Then
		Dim strSearch As String
		If InStr(LCase(obj), "cn=") > 0 Then
			Dim nam As New NotesName(obj)
			strSearch = nam.Abbreviated
		Else
			strSearch = obj
		End If
		If AT_isUser(CStr(strSearch)) Then 
			Set doc = AT_getUserView.Getdocumentbykey(strSearch)
			flag = 1
		ElseIf AT_isGroup(CStr(strSearch)) Then
			Set doc = AT_getGroupView.Getdocumentbykey(strSearch)
			flag = 2
		End If
	ElseIf TypeName(obj) = "ATUSER" Then
		Set doc = obj.getDoc()
		flag = 1
	ElseIf TypeName(obj) = "ATGROUP" Then
		Set doc = obj.getDoc()
		flag = 2
	End If
	
	If Not doc Is Nothing And flag > 0 Then
		Select Case flag
		Case 1
			Set AT_getATObject = New ATUser(doc)
		Case 2
			Set AT_getATObject = New ATGroup(doc)
		End Select
	End If
	 
	
	GoTo EndH
ErrH:
	stop
	Error Err, DesignElem & " -> " & GetThreadInfo(1) & ", c. " & CStr(Erl) & nLine & Error$
EndH:
End Function

'++LotusScript Development Environment:2:1:AT_waitProcess:6:8
'********************************************
'Function AT_waitProcess
'Boolean
'Olimpus: Oct 1, 2020
'********************************************
Function AT_waitProcess(Server As String, uid As String) As Boolean
	On Error GoTo ErrH

	Dim db As New NotesDatabase(server, "admin4.nsf")
	Dim doc As NotesDocument 
	Set doc = db.Getdocumentbyid(uid)
	
	If doc Is Nothing Then GoTo endh
	
	Dim i As integer
	Dim ProxyUNID As String
	ProxyUNID = doc.Getitemvalue("ProxyOriginatingRequestUNID")(0)
	
	Dim requestsDc As NotesDocumentCollection
	Dim logsDc As NotesDocumentCollection
	
	Set requestsDc = db.Search({Type = "AdminRequest" & ProxyOriginatingRequestUNID = "} & ProxyUNID & {"}, Nothing, 0)
	Set logsDc = db.Search({Type = "AdminLog" & ProxyOriginatingRequestUNID = "} & ProxyUNID & {"}, Nothing, 0)
	
	While requestsDc.count <> logsDc.count And i < TIME_TO_WAIT_PROCESS
		Set requestsDc = db.Search({Type = "AdminRequest" & ProxyOriginatingRequestUNID = "} & ProxyUNID & {"}, Nothing, 0)
		Set logsDc = db.Search({Type = "AdminLog" & ProxyOriginatingRequestUNID = "} & ProxyUNID & {"}, Nothing, 0)
		i = i + 1
		Sleep 1
	Wend
	
	If i < TIME_TO_WAIT_PROCESS Then AT_waitProcess = True
	
	GoTo EndH
ErrH:
	Error Err, DesignElem & " -> " & GetThreadInfo(1) & ", c. " & CStr(Erl) & nLine & Error$
EndH:
End Function


'++LotusScript Development Environment:2:1:AT_getFullView:6:8
'********************************************
'Function AT_getUserView
'NotesView
'Olimpus: 29.10.2020
'********************************************
Function AT_getFullView() As NotesView
	On Error GoTo ErrH

	If AT_fullView Is Nothing Then Set AT_fullView = AT_getNab().Getview("$Users")
	Set AT_getFullView = AT_fullView
	
	GoTo EndH
ErrH:
	stop
	Error Err, DesignElem & " -> " & GetThreadInfo(1) & ", c. " & CStr(Erl) & nLine & Error$
EndH:
End Function


'++LotusScript Development Environment:2:1:AT_getNabOnServer:6:8
'********************************************
'Function AT_getNabOnServer
'NotesDatabase
'Olimpus: 29.10.2020
'********************************************
Function AT_getNabOnServer(server As String) As NotesDatabase
	On Error GoTo ErrH

	Set AT_nab = New NotesDatabase(server, "names.nsf")
	Set AT_getNabOnServer = AT_nab
	
	GoTo EndH
ErrH:
	stop
	Error Err, DesignElem & " -> " & GetThreadInfo(1) & ", c. " & CStr(Erl) & nLine & Error$
EndH:
End Function

'++LotusScript Development Environment:2:1:AT_isGroup:6:8
'********************************************
'Function AT_isGroup
'Boolean
'Olimpus: 09.11.2020
'********************************************
Function AT_isGroup(gName As String) As Boolean
	On Error GoTo ErrH

	Dim entry As NotesViewEntry
	Set entry = AT_getGroupView().Getentrybykey(gName)
	AT_isGroup = Not entry Is Nothing
	
	GoTo EndH
ErrH:
	stop
	Error Err, DesignElem & " -> " & GetThreadInfo(1) & ", c. " & CStr(Erl) & nLine & Error$
EndH:
End Function

'++LotusScript Development Environment:2:1:AT_isUser:6:8
'********************************************
'Function AT_isUser
'Boolean
'Olimpus: 09.11.2020
'********************************************
Function AT_isUser(uName As String) As Boolean
	On Error GoTo ErrH
	

	Dim entry As NotesViewEntry
	Set entry = AT_getUserView().Getentrybykey(uName)
	AT_isUser = Not entry Is nothing
	
	GoTo EndH
ErrH:
	stop
	Error Err, DesignElem & " -> " & GetThreadInfo(1) & ", c. " & CStr(Erl) & nLine & Error$
EndH:
End Function


'++LotusScript Development Environment:2:1:AT_getNab:6:8
'********************************************
'Function AT_getNab
'NotesDatabase
'Olimpus: 29.10.2020
'********************************************
Function AT_getNab() As NotesDatabase
	On Error GoTo ErrH

	Dim s As New notessession
	If AT_nab Is Nothing Then Set AT_nab = New NotesDatabase(s.Currentdatabase.Server, "names.nsf")
	Set AT_getNab = AT_nab
	
	GoTo EndH
ErrH:
	stop
	Error Err, DesignElem & " -> " & GetThreadInfo(1) & ", c. " & CStr(Erl) & nLine & Error$
EndH:
End Function


'++LotusScript Development Environment:2:1:AT_getGroupView:6:8
'********************************************
'Function AT_getGroupView
'NotesView
'Olimpus: 09.11.2020
'********************************************
Function AT_getGroupView() As NotesView
	On Error GoTo ErrH

	If AT_groupView Is Nothing Then Set AT_groupView = AT_getNab().Getview("($VIMGroups)")
	Set AT_getGroupView = AT_groupView
	
	GoTo EndH
ErrH:
	stop
	Error Err, DesignElem & " -> " & GetThreadInfo(1) & ", c. " & CStr(Erl) & nLine & Error$
EndH:
End Function


