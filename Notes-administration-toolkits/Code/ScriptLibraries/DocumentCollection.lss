'++LotusScript Development Environment:2:5:(Options):0:74
%REM
	Library DocumentCollection
	Created Oct 26, 2018 by Alexandr S. Olympiev/OTTO/RU
	Description: Comments for Library
%END REM
Option Public
Option Declare

'++LotusScript Development Environment:2:5:(Forward):0:1
Declare Class DocumentCollection
Declare Sub Initialize

'++LotusScript Development Environment:2:5:(Declarations):0:10
Private Const DesignElem = {DocumentCollection}
Private nLine As String

' Library TransactionLib -> Class DocumentCollection
' 
' DCS-Olympiev Oct 11, 2018
' *********************************************************************************
Class DocumentCollection
	Private className As String
	Private docArr() As NotesDocument
	Private docUNIDSArr() As String
	Private dbList List As NotesDatabase
	Private pointer As Integer

	Sub New
		className = {DocumentCollection}
		Call resetCollection()
	End Sub
	' Library TransactionLib -> Function addDocuments
	' Boolean
	' DCS-Olympiev Oct 11, 2018
	' *********************************************************************************
	Function addDocumentFromDisk(doc As Variant) As NotesDocument
		Const FuncName = {DocumentCollection.addDocumentFromDisk}
		On Error GoTo ErrH

		Dim db As NotesDatabase
		Dim unid As String
		Dim view As NotesView
		
		If doc.NoteID = 0 Then GoTo endH

		Set db = doc.Parentdatabase

		If Not IsElement(dbList(db.Replicaid)) Then
			Set dbList(db.Replicaid) = db
		Else
			Set db = dbList(db.Replicaid)
		End If
		
		unid = doc.Getitemvalue("UNID")(0)
		If unid = "" Then unid = doc.Universalid
		
		Set view = db.getView("(ByUNID)")
		Set doc = view.Getdocumentbykey(unid)
		
		If doc Is Nothing Then GoTo endH
		
		pointer = UBound(docArr)
		ReDim Preserve docArr(pointer) As NotesDocument
		Set docArr(pointer) = doc
		
		ReDim Preserve docUNIDSArr(pointer) As String
		docUNIDSArr(pointer) = doc.universalID
		
		Set AddDocumentFromDisk = doc
		
		GoTo EndH
ErrH:
		Error Err, DesignElem & " -> " & funcName & ", c. " & CStr(Erl) & nLine & Error$
		Resume EndH
EndH:
	End Function
	' Library TransactionLib -> Sub save
	' 
	' DCS-Olympiev Oct 11, 2018
	' *********************************************************************************
	Sub save
		Const FuncName = {DocumentCollection.save}
		On Error GoTo ErrH

		Dim i As Integer
		For i = LBound(docArr) To UBound(docArr)
			Call docArr(i).Save(True, False)
		Next

		GoTo EndH
ErrH:
		Error Err, DesignElem & " -> " & funcName & ", c. " & CStr(Erl) & nLine & Error$
		Resume EndH
EndH:
	End Sub

	' Library TransactionLib -> Function getFirstDocument
	' NotesDocument
	' DCS-Olympiev Oct 11, 2018
	' *********************************************************************************
	Function getFirstDocument () As NotesDocument
		Const FuncName = {DocumentCollection.getFirstDocument}
		On Error GoTo ErrH

		pointer = 1
		Set getFirstDocument = docArr(1)
		
		GoTo EndH
ErrH:
		Error Err, DesignElem & " -> " & funcName & ", c. " & CStr(Erl) & nLine & Error$
		Resume EndH
EndH:
	End Function
	' Library TransactionLib -> Function getNextDocument
	' NotesDocument
	' DCS-Olympiev Oct 11, 2018
	' *********************************************************************************
	Function getNextDocument() As NotesDocument
		Const FuncName = {DocumentCollection.getNextDocument}
		On Error GoTo ErrH

		pointer = pointer + 1
		If pointer > UBound(docArr) Then
			pointer = UBound(docArr)
			GoTo endH
		End If
		
		Set getNextDocument = docArr(pointer)

		GoTo EndH
ErrH:
		Error Err, DesignElem & " -> " & funcName & ", c. " & CStr(Erl) & nLine & Error$
		Resume EndH
EndH:
	End Function
	' Library TransactionLib -> Function getPrevDocument
	' Variant
	' DCS-Olympiev Oct 11, 2018
	' *********************************************************************************
	Function getPrevDocument()
		Const FuncName = {DocumentCollection.getPrevDocument}
		On Error GoTo ErrH

		pointer = pointer - 1
		If pointer < LBound(docArr) Then
			pointer = LBound(docArr)
			GoTo endH
		End If
		
		Set getPrevDocument = docArr(pointer)

		GoTo EndH
ErrH:
		Error Err, DesignElem & " -> " & funcName & ", c. " & CStr(Erl) & nLine & Error$
		Resume EndH
EndH:
	End Function

	' Library TransactionLib -> Function getNthDocument
	' NotesDocument
	' DCS-Olympiev Oct 11, 2018
	' *********************************************************************************
	Function getNthDocument(position As Integer) As NotesDocument
		Const FuncName = {DocumentCollection.getNthDocument}
		On Error GoTo ErrH

		If position > UBound(docArr) Or position < LBound(docArr) Then GoTo Endh
		pointer = position
		Set getNthDocument = docArr(pointer)

		GoTo EndH
ErrH:
		Error Err, DesignElem & " -> " & funcName & ", c. " & CStr(Erl) & nLine & Error$
		Resume EndH
EndH:
	End Function
	' Library TransactionLib -> Function removeDocument
	' Boolean
	' DCS-Olympiev Oct 11, 2018
	' *********************************************************************************
	Function deleteDocument(doc) As Boolean
		Const FuncName = {DocumentCollection.deleteDocument}
		On Error GoTo ErrH

		If Not IsNull(ArrayGetIndex(docArr, doc)) Then
			For pointer = ArrayGetIndex(docArr, doc) To UBound(docArr)-1
				Set docArr(pointer) = docArr(pointer+1)
				docUNIDSArr(pointer) = docUNIDSArr(pointer+1)
			Next
			pointer = pointer - 1
			ReDim Preserve docArr(pointer) As NotesDocument
			ReDim Preserve docUNIDSArr(pointer) As String
			
		End If
		deleteDocument = True

		GoTo EndH
ErrH:
		Error Err, DesignElem & " -> " & funcName & ", c. " & CStr(Erl) & nLine & Error$
		Resume EndH
EndH:
	End Function
	' Library TransactionLib -> Function addDocument
	' NotesDocument
	' DCS-Olympiev Oct 11, 2018
	' *********************************************************************************
	Function addDocument (doc As Variant) As NotesDocument
		Const FuncName = {DocumentCollection.addDocument}
		On Error GoTo ErrH

		If doc Is Nothing Then GoTo endH
		
		If Not IsElement(dbList(doc.Parentdatabase.Replicaid)) Then
			Set dbList(doc.Parentdatabase.Replicaid) = doc.Parentdatabase
		End If
		
		If Not IsNull(ArrayGetIndex(docUNIDsArr, doc.universalID)) Then GoTo endh
		
		If docArr(1) Is Nothing Then
			Set docArr(pointer) = doc
			docUNIDSArr(pointer) = doc.universalID
		Else
			pointer = UBound(docArr) + 1
			ReDim Preserve docArr(1 To pointer) As NotesDocument
			Set docArr(pointer) = doc			
			ReDim Preserve docUNIDSArr(1 To pointer) As String
			docUNIDSArr(pointer) = doc.universalID
		End If

		
		Set addDocument = doc

		GoTo EndH
ErrH:
		Error Err, DesignElem & " -> " & funcName & ", c. " & CStr(Erl) & nLine & Error$
		Resume EndH
EndH:
	End Function
	' Library TransactionLib -> Function addDocumentCollection
	' DocumentCollection
	' DCS-Olympiev Oct 11, 2018
	' *********************************************************************************
	Function addDocumentCollection (col As Variant) As DocumentCollection
		Const FuncName = {DocumentCollection.addDocumentCollection}
		On Error GoTo ErrH

		If col Is Nothing Then GoTo EndH

		Dim doc As NotesDocument
		
		Set doc = col.getFirstDocument()
		While Not doc Is Nothing
			Call addDocument(doc)
			If TypeName(col) = "NOTESDOCUMENTCOLLECTION" Then
				Set doc = col.getNextDocument(doc)
			Else
				Set doc = col.getNextDocument()				
			End If
		Wend

		Set addDocumentCollection = Me

		GoTo EndH
ErrH:
		Error Err, DesignElem & " -> " & funcName & ", c. " & CStr(Erl) & nLine & Error$
		Resume EndH
EndH:
	End Function
	' Library TransactionLib -> Function removeAll
	' Boolean
	' Удаляет документы из БД и чистит коллекцию
	' DCS-Olympiev Oct 11, 2018
	' *********************************************************************************
	Function removeAll As Boolean
		Const FuncName = {DocumentCollection.removeAll}
		On Error GoTo ErrH

		Dim doc As NotesDocument

		For pointer = 1 To UBound(docArr)
			Call docArr(pointer).Remove(True)
		Next
		
		removeAll = resetCollection()
		
		GoTo EndH
ErrH:
		Error Err, DesignElem & " -> " & funcName & ", c. " & CStr(Erl) & nLine & Error$
		Resume EndH
EndH:
	End Function
	' Library TransactionLib -> Function resetCollection
	' Boolean
	' DCS-Olympiev Oct 11, 2018
	' *********************************************************************************
	Function resetCollection As Boolean
		Const FuncName = {DocumentCollection.resetCollection}
		On Error GoTo ErrH

		ReDim docArr(1 To 1)
		Set docArr(1) = Nothing 
		ReDim docUNIDSArr(1 To 1)
		docUNIDSArr(1) = ""
		pointer = 1
		Erase dbList
		
		resetCollection = True
		
		GoTo EndH 
ErrH:
		Error Err, DesignElem & " -> " & funcName & ", c. " & CStr(Erl) & nLine & Error$
		Resume EndH
EndH:
	End Function
	' Library DocumentCollection -> Function count
	' Long
	' DCS-Olympiev Oct 30, 2018
	' *********************************************************************************
	Function count As Long
	Const FuncName = {count}
	On Error GoTo ErrH

		count = UBound(docArr)

	GoTo EndH
ErrH:
	Error Err, DesignElem & " -> " & funcName & ", c. " & CStr(ErL) & nLine & Error$
	Resume EndH
EndH:
	End Function
	
	' Library DocumentCollection -> Function getDocumentByUNID
	' NotesDocument
	' DCS-Olympiev Mar 19, 2019
	' *********************************************************************************
	Function getDocumentByUNID (unid As String) As NotesDocument
	On Error GoTo ErrH

	Dim i As Long
	
	If Not IsNull(ArrayGetIndex(docUNIDSArr, unid)) Then
		i = ArrayGetIndex(docUNIDSArr, unid)
		Set getDocumentByUNID = docArr(i)
	End If

	GoTo EndH
ErrH:
	Error Err, DesignElem & " -> " & TypeName(Me) & " -> " & GetThreadInfo(1) & ", c. " & CStr(ErL) & nLine & Error$
EndH:
	End Function
	' Library DocumentCollection -> Function getUNIDs
	' Variant
	' DCS-Olympiev Mar 20, 2019
	' *********************************************************************************
	Function getUNIDs As Variant
	On Error GoTo ErrH

		getUNIDs = docUNIDsArr

	GoTo EndH
ErrH:
	Error Err, DesignElem & " -> " & TypeName(Me) & " -> " & GetThreadInfo(1) & ", c. " & CStr(ErL) & nLine & Error$
EndH:
	End Function
End Class
'++LotusScript Development Environment:2:2:Initialize:2:10

Sub Initialize
	Const FuncName = {Initialize}
	On Error GoTo ErrH
	nLine = Chr(10) & Chr(13)



	GoTo EndH
ErrH:
	Error Err, DesignElem & " -> " & funcName & ", c. " & CStr(ErL) & nLine & Error$
	Resume EndH
EndH:
End Sub















